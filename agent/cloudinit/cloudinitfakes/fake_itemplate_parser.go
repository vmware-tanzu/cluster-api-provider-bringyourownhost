// Code generated by counterfeiter. DO NOT EDIT.
package cloudinitfakes

import (
	"sync"

	"github.com/vmware-tanzu/cluster-api-provider-bringyourownhost/agent/cloudinit"
)

type FakeITemplateParser struct {
	ParseTemplateStub        func(string) (string, error)
	parseTemplateMutex       sync.RWMutex
	parseTemplateArgsForCall []struct {
		arg1 string
	}
	parseTemplateReturns struct {
		result1 string
		result2 error
	}
	parseTemplateReturnsOnCall map[int]struct {
		result1 string
		result2 error
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeITemplateParser) ParseTemplate(arg1 string) (string, error) {
	fake.parseTemplateMutex.Lock()
	ret, specificReturn := fake.parseTemplateReturnsOnCall[len(fake.parseTemplateArgsForCall)]
	fake.parseTemplateArgsForCall = append(fake.parseTemplateArgsForCall, struct {
		arg1 string
	}{arg1})
	stub := fake.ParseTemplateStub
	fakeReturns := fake.parseTemplateReturns
	fake.recordInvocation("ParseTemplate", []interface{}{arg1})
	fake.parseTemplateMutex.Unlock()
	if stub != nil {
		return stub(arg1)
	}
	if specificReturn {
		return ret.result1, ret.result2
	}
	return fakeReturns.result1, fakeReturns.result2
}

func (fake *FakeITemplateParser) ParseTemplateCallCount() int {
	fake.parseTemplateMutex.RLock()
	defer fake.parseTemplateMutex.RUnlock()
	return len(fake.parseTemplateArgsForCall)
}

func (fake *FakeITemplateParser) ParseTemplateCalls(stub func(string) (string, error)) {
	fake.parseTemplateMutex.Lock()
	defer fake.parseTemplateMutex.Unlock()
	fake.ParseTemplateStub = stub
}

func (fake *FakeITemplateParser) ParseTemplateArgsForCall(i int) string {
	fake.parseTemplateMutex.RLock()
	defer fake.parseTemplateMutex.RUnlock()
	argsForCall := fake.parseTemplateArgsForCall[i]
	return argsForCall.arg1
}

func (fake *FakeITemplateParser) ParseTemplateReturns(result1 string, result2 error) {
	fake.parseTemplateMutex.Lock()
	defer fake.parseTemplateMutex.Unlock()
	fake.ParseTemplateStub = nil
	fake.parseTemplateReturns = struct {
		result1 string
		result2 error
	}{result1, result2}
}

func (fake *FakeITemplateParser) ParseTemplateReturnsOnCall(i int, result1 string, result2 error) {
	fake.parseTemplateMutex.Lock()
	defer fake.parseTemplateMutex.Unlock()
	fake.ParseTemplateStub = nil
	if fake.parseTemplateReturnsOnCall == nil {
		fake.parseTemplateReturnsOnCall = make(map[int]struct {
			result1 string
			result2 error
		})
	}
	fake.parseTemplateReturnsOnCall[i] = struct {
		result1 string
		result2 error
	}{result1, result2}
}

func (fake *FakeITemplateParser) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.parseTemplateMutex.RLock()
	defer fake.parseTemplateMutex.RUnlock()
	copiedInvocations := map[string][][]interface{}{}
	for key, value := range fake.invocations {
		copiedInvocations[key] = value
	}
	return copiedInvocations
}

func (fake *FakeITemplateParser) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ cloudinit.ITemplateParser = new(FakeITemplateParser)
